{
  "numTotalTests": 20,
  "numPassedTests": 14,
  "numFailedTests": 6,
  "numPendingTests": 0,
  "startTime": "2025-08-14T14:42:30.091Z",
  "endTime": "2025-08-14T14:42:32.595Z",
  "testResults": [
    {
      "testFilePath": "D:\\.work\\rental-software\\features\\manage-product\\services\\productService.test.ts",
      "testFileResults": [
        {
          "ancestorTitles": [
            "ProductService",
            "createProduct"
          ],
          "fullName": "ProductService createProduct should create product successfully - happy path",
          "status": "passed",
          "title": "should create product successfully - happy path",
          "failureMessages": [],
          "duration": 5
        },
        {
          "ancestorTitles": [
            "ProductService",
            "createProduct"
          ],
          "fullName": "ProductService createProduct should throw error when product code already exists",
          "status": "passed",
          "title": "should throw error when product code already exists",
          "failureMessages": [],
          "duration": 31
        },
        {
          "ancestorTitles": [
            "ProductService",
            "createProduct"
          ],
          "fullName": "ProductService createProduct should handle validation error gracefully",
          "status": "passed",
          "title": "should handle validation error gracefully",
          "failureMessages": [],
          "duration": 5
        },
        {
          "ancestorTitles": [
            "ProductService",
            "createProduct"
          ],
          "fullName": "ProductService createProduct should handle database error during creation",
          "status": "passed",
          "title": "should handle database error during creation",
          "failureMessages": [],
          "duration": 1
        },
        {
          "ancestorTitles": [
            "ProductService",
            "createProduct"
          ],
          "fullName": "ProductService createProduct should create product dengan material integration successfully",
          "status": "passed",
          "title": "should create product dengan material integration successfully",
          "failureMessages": [],
          "duration": null
        },
        {
          "ancestorTitles": [
            "ProductService",
            "createProduct"
          ],
          "fullName": "ProductService createProduct should throw error jika material tidak ditemukan",
          "status": "passed",
          "title": "should throw error jika material tidak ditemukan",
          "failureMessages": [],
          "duration": null
        },
        {
          "ancestorTitles": [
            "ProductService",
            "updateProduct"
          ],
          "fullName": "ProductService updateProduct should update product successfully - happy path",
          "status": "failed",
          "title": "should update product successfully - happy path",
          "failureMessages": [
            "Error: expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\n- Expected\n+ Received\n\n  Object {\n    \"data\": Object {\n-     \"hargaSewa\": \"60000\",\n+     \"currentPrice\": \"60000\",\n      \"name\": \"Updated Dress Name\",\n-     \"updatedAt\": Any<Date>,\n+     \"updatedAt\": 2025-08-14T14:42:32.503Z,\n    },\n    \"include\": Object {\n      \"category\": true,\n+     \"color\": true,\n+     \"material\": true,\n    },\n    \"where\": Object {\n      \"id\": \"prod-123\",\n    },\n  },\n\nNumber of calls: 1\n    at Object.toHaveBeenCalledWith (D:\\.work\\rental-software\\features\\manage-product\\services\\productService.test.ts:368:41)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "duration": 14
        },
        {
          "ancestorTitles": [
            "ProductService",
            "updateProduct"
          ],
          "fullName": "ProductService updateProduct should throw error when product not found",
          "status": "passed",
          "title": "should throw error when product not found",
          "failureMessages": [],
          "duration": null
        },
        {
          "ancestorTitles": [
            "ProductService",
            "updateProduct"
          ],
          "fullName": "ProductService updateProduct should handle empty update request gracefully",
          "status": "failed",
          "title": "should handle empty update request gracefully",
          "failureMessages": [
            "Error: expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\n- Expected\n+ Received\n\n  Object {\n    \"data\": Object {\n-     \"updatedAt\": Any<Date>,\n+     \"updatedAt\": 2025-08-14T14:42:32.518Z,\n    },\n    \"include\": Object {\n      \"category\": true,\n+     \"color\": true,\n+     \"material\": true,\n    },\n    \"where\": Object {\n      \"id\": \"prod-123\",\n    },\n  },\n\nNumber of calls: 1\n    at Object.toHaveBeenCalledWith (D:\\.work\\rental-software\\features\\manage-product\\services\\productService.test.ts:407:41)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "duration": 2
        },
        {
          "ancestorTitles": [
            "ProductService",
            "getProducts"
          ],
          "fullName": "ProductService getProducts should get products with pagination and filters - happy path",
          "status": "failed",
          "title": "should get products with pagination and filters - happy path",
          "failureMessages": [
            "Error: expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\n- Expected\n+ Received\n\n@@ -1,8 +1,10 @@\n  Object {\n    \"include\": Object {\n      \"category\": true,\n+     \"color\": true,\n+     \"material\": true,\n    },\n    \"orderBy\": Object {\n      \"createdAt\": \"desc\",\n    },\n    \"skip\": 0,,\n\nNumber of calls: 1\n    at Object.toHaveBeenCalledWith (D:\\.work\\rental-software\\features\\manage-product\\services\\productService.test.ts:480:43)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "duration": 2
        },
        {
          "ancestorTitles": [
            "ProductService",
            "getProducts"
          ],
          "fullName": "ProductService getProducts should handle query without filters",
          "status": "failed",
          "title": "should handle query without filters",
          "failureMessages": [
            "Error: expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\n- Expected\n+ Received\n\n@@ -1,8 +1,10 @@\n  Object {\n    \"include\": Object {\n      \"category\": true,\n+     \"color\": true,\n+     \"material\": true,\n    },\n    \"orderBy\": Object {\n      \"createdAt\": \"desc\",\n    },\n    \"skip\": 0,,\n\nNumber of calls: 1\n    at Object.toHaveBeenCalledWith (D:\\.work\\rental-software\\features\\manage-product\\services\\productService.test.ts:526:43)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "duration": 1
        },
        {
          "ancestorTitles": [
            "ProductService",
            "getProducts"
          ],
          "fullName": "ProductService getProducts should handle empty results",
          "status": "passed",
          "title": "should handle empty results",
          "failureMessages": [],
          "duration": 0
        },
        {
          "ancestorTitles": [
            "ProductService",
            "getProductById"
          ],
          "fullName": "ProductService getProductById should get product by ID successfully - happy path",
          "status": "failed",
          "title": "should get product by ID successfully - happy path",
          "failureMessages": [
            "Error: expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\n- Expected\n+ Received\n\n@@ -1,8 +1,10 @@\n  Object {\n    \"include\": Object {\n      \"category\": true,\n+     \"color\": true,\n+     \"material\": true,\n    },\n    \"where\": Object {\n      \"id\": \"prod-123\",\n      \"isActive\": true,\n    },,\n\nNumber of calls: 1\n    at Object.toHaveBeenCalledWith (D:\\.work\\rental-software\\features\\manage-product\\services\\productService.test.ts:602:45)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "duration": 1
        },
        {
          "ancestorTitles": [
            "ProductService",
            "getProductById"
          ],
          "fullName": "ProductService getProductById should throw error when product not found",
          "status": "passed",
          "title": "should throw error when product not found",
          "failureMessages": [],
          "duration": 0
        },
        {
          "ancestorTitles": [
            "ProductService",
            "getProductById"
          ],
          "fullName": "ProductService getProductById should handle invalid ID format",
          "status": "passed",
          "title": "should handle invalid ID format",
          "failureMessages": [],
          "duration": 1
        },
        {
          "ancestorTitles": [
            "ProductService",
            "deleteProduct"
          ],
          "fullName": "ProductService deleteProduct should soft delete product successfully - happy path",
          "status": "passed",
          "title": "should soft delete product successfully - happy path",
          "failureMessages": [],
          "duration": null
        },
        {
          "ancestorTitles": [
            "ProductService",
            "deleteProduct"
          ],
          "fullName": "ProductService deleteProduct should throw error when product not found",
          "status": "passed",
          "title": "should throw error when product not found",
          "failureMessages": [],
          "duration": null
        },
        {
          "ancestorTitles": [
            "ProductService",
            "updateProductStatus"
          ],
          "fullName": "ProductService updateProductStatus should update product status successfully - happy path",
          "status": "failed",
          "title": "should update product status successfully - happy path",
          "failureMessages": [
            "Error: expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\n- Expected\n+ Received\n\n  Object {\n    \"data\": Object {\n      \"status\": \"MAINTENANCE\",\n-     \"updatedAt\": Any<Date>,\n+     \"updatedAt\": 2025-08-14T14:42:32.531Z,\n    },\n    \"include\": Object {\n      \"category\": true,\n+     \"color\": true,\n+     \"material\": true,\n    },\n    \"where\": Object {\n      \"id\": \"prod-123\",\n    },\n  },\n\nNumber of calls: 1\n    at Object.toHaveBeenCalledWith (D:\\.work\\rental-software\\features\\manage-product\\services\\productService.test.ts:733:41)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "duration": 2
        },
        {
          "ancestorTitles": [
            "ProductService",
            "updateProductStatus"
          ],
          "fullName": "ProductService updateProductStatus should throw error when trying to set same status",
          "status": "passed",
          "title": "should throw error when trying to set same status",
          "failureMessages": [],
          "duration": null
        },
        {
          "ancestorTitles": [
            "ProductService",
            "updateProductStatus"
          ],
          "fullName": "ProductService updateProductStatus should handle invalid status value",
          "status": "passed",
          "title": "should handle invalid status value",
          "failureMessages": [],
          "duration": 1
        }
      ],
      "failureMessage": "  ● ProductService › updateProduct › should update product successfully - happy path\n\n    expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\n    - Expected\n    + Received\n\n      Object {\n        \"data\": Object {\n    -     \"hargaSewa\": \"60000\",\n    +     \"currentPrice\": \"60000\",\n          \"name\": \"Updated Dress Name\",\n    -     \"updatedAt\": Any<Date>,\n    +     \"updatedAt\": 2025-08-14T14:42:32.503Z,\n        },\n        \"include\": Object {\n          \"category\": true,\n    +     \"color\": true,\n    +     \"material\": true,\n        },\n        \"where\": Object {\n          \"id\": \"prod-123\",\n        },\n      },\n\n    Number of calls: 1\n\n    \u001b[0m \u001b[90m 366 |\u001b[39m         include\u001b[33m:\u001b[39m { category\u001b[33m:\u001b[39m \u001b[36mtrue\u001b[39m }\u001b[33m,\u001b[39m\n     \u001b[90m 367 |\u001b[39m       })\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 368 |\u001b[39m       expect(mockPrisma\u001b[33m.\u001b[39mproduct\u001b[33m.\u001b[39mupdate)\u001b[33m.\u001b[39mtoHaveBeenCalledWith({\n     \u001b[90m     |\u001b[39m                                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 369 |\u001b[39m         where\u001b[33m:\u001b[39m { id\u001b[33m:\u001b[39m productId }\u001b[33m,\u001b[39m\n     \u001b[90m 370 |\u001b[39m         data\u001b[33m:\u001b[39m {\n     \u001b[90m 371 |\u001b[39m           name\u001b[33m:\u001b[39m \u001b[32m'Updated Dress Name'\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\n      at Object.toHaveBeenCalledWith (features/manage-product/services/productService.test.ts:368:41)\n\n  ● ProductService › updateProduct › should handle empty update request gracefully\n\n    expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\n    - Expected\n    + Received\n\n      Object {\n        \"data\": Object {\n    -     \"updatedAt\": Any<Date>,\n    +     \"updatedAt\": 2025-08-14T14:42:32.518Z,\n        },\n        \"include\": Object {\n          \"category\": true,\n    +     \"color\": true,\n    +     \"material\": true,\n        },\n        \"where\": Object {\n          \"id\": \"prod-123\",\n        },\n      },\n\n    Number of calls: 1\n\n    \u001b[0m \u001b[90m 405 |\u001b[39m\n     \u001b[90m 406 |\u001b[39m       \u001b[90m// Assert\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 407 |\u001b[39m       expect(mockPrisma\u001b[33m.\u001b[39mproduct\u001b[33m.\u001b[39mupdate)\u001b[33m.\u001b[39mtoHaveBeenCalledWith({\n     \u001b[90m     |\u001b[39m                                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 408 |\u001b[39m         where\u001b[33m:\u001b[39m { id\u001b[33m:\u001b[39m productId }\u001b[33m,\u001b[39m\n     \u001b[90m 409 |\u001b[39m         data\u001b[33m:\u001b[39m {\n     \u001b[90m 410 |\u001b[39m           updatedAt\u001b[33m:\u001b[39m expect\u001b[33m.\u001b[39many(\u001b[33mDate\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m\n\n      at Object.toHaveBeenCalledWith (features/manage-product/services/productService.test.ts:407:41)\n\n  ● ProductService › getProducts › should get products with pagination and filters - happy path\n\n    expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\n    - Expected\n    + Received\n\n    @@ -1,8 +1,10 @@\n      Object {\n        \"include\": Object {\n          \"category\": true,\n    +     \"color\": true,\n    +     \"material\": true,\n        },\n        \"orderBy\": Object {\n          \"createdAt\": \"desc\",\n        },\n        \"skip\": 0,,\n\n    Number of calls: 1\n\n    \u001b[0m \u001b[90m 478 |\u001b[39m       \u001b[90m// Assert\u001b[39m\n     \u001b[90m 479 |\u001b[39m       expect(productQuerySchema\u001b[33m.\u001b[39mparse)\u001b[33m.\u001b[39mtoHaveBeenCalledWith(mockQuery)\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 480 |\u001b[39m       expect(mockPrisma\u001b[33m.\u001b[39mproduct\u001b[33m.\u001b[39mfindMany)\u001b[33m.\u001b[39mtoHaveBeenCalledWith({\n     \u001b[90m     |\u001b[39m                                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 481 |\u001b[39m         where\u001b[33m:\u001b[39m {\n     \u001b[90m 482 |\u001b[39m           isActive\u001b[33m:\u001b[39m \u001b[36mtrue\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 483 |\u001b[39m           categoryId\u001b[33m:\u001b[39m \u001b[32m'cat-123'\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\n      at Object.toHaveBeenCalledWith (features/manage-product/services/productService.test.ts:480:43)\n\n  ● ProductService › getProducts › should handle query without filters\n\n    expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\n    - Expected\n    + Received\n\n    @@ -1,8 +1,10 @@\n      Object {\n        \"include\": Object {\n          \"category\": true,\n    +     \"color\": true,\n    +     \"material\": true,\n        },\n        \"orderBy\": Object {\n          \"createdAt\": \"desc\",\n        },\n        \"skip\": 0,,\n\n    Number of calls: 1\n\n    \u001b[0m \u001b[90m 524 |\u001b[39m\n     \u001b[90m 525 |\u001b[39m       \u001b[90m// Assert\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 526 |\u001b[39m       expect(mockPrisma\u001b[33m.\u001b[39mproduct\u001b[33m.\u001b[39mfindMany)\u001b[33m.\u001b[39mtoHaveBeenCalledWith({\n     \u001b[90m     |\u001b[39m                                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 527 |\u001b[39m         where\u001b[33m:\u001b[39m {\n     \u001b[90m 528 |\u001b[39m           isActive\u001b[33m:\u001b[39m \u001b[36mtrue\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 529 |\u001b[39m         }\u001b[33m,\u001b[39m\u001b[0m\n\n      at Object.toHaveBeenCalledWith (features/manage-product/services/productService.test.ts:526:43)\n\n  ● ProductService › getProductById › should get product by ID successfully - happy path\n\n    expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\n    - Expected\n    + Received\n\n    @@ -1,8 +1,10 @@\n      Object {\n        \"include\": Object {\n          \"category\": true,\n    +     \"color\": true,\n    +     \"material\": true,\n        },\n        \"where\": Object {\n          \"id\": \"prod-123\",\n          \"isActive\": true,\n        },,\n\n    Number of calls: 1\n\n    \u001b[0m \u001b[90m 600 |\u001b[39m       \u001b[90m// Assert\u001b[39m\n     \u001b[90m 601 |\u001b[39m       expect(productParamsSchema\u001b[33m.\u001b[39mparse)\u001b[33m.\u001b[39mtoHaveBeenCalledWith({ id\u001b[33m:\u001b[39m productId })\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 602 |\u001b[39m       expect(mockPrisma\u001b[33m.\u001b[39mproduct\u001b[33m.\u001b[39mfindUnique)\u001b[33m.\u001b[39mtoHaveBeenCalledWith({\n     \u001b[90m     |\u001b[39m                                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 603 |\u001b[39m         where\u001b[33m:\u001b[39m { id\u001b[33m:\u001b[39m productId\u001b[33m,\u001b[39m isActive\u001b[33m:\u001b[39m \u001b[36mtrue\u001b[39m }\u001b[33m,\u001b[39m\n     \u001b[90m 604 |\u001b[39m         include\u001b[33m:\u001b[39m {\n     \u001b[90m 605 |\u001b[39m           category\u001b[33m:\u001b[39m \u001b[36mtrue\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\n      at Object.toHaveBeenCalledWith (features/manage-product/services/productService.test.ts:602:45)\n\n  ● ProductService › updateProductStatus › should update product status successfully - happy path\n\n    expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\n    - Expected\n    + Received\n\n      Object {\n        \"data\": Object {\n          \"status\": \"MAINTENANCE\",\n    -     \"updatedAt\": Any<Date>,\n    +     \"updatedAt\": 2025-08-14T14:42:32.531Z,\n        },\n        \"include\": Object {\n          \"category\": true,\n    +     \"color\": true,\n    +     \"material\": true,\n        },\n        \"where\": Object {\n          \"id\": \"prod-123\",\n        },\n      },\n\n    Number of calls: 1\n\n    \u001b[0m \u001b[90m 731 |\u001b[39m         where\u001b[33m:\u001b[39m { id\u001b[33m:\u001b[39m productId\u001b[33m,\u001b[39m isActive\u001b[33m:\u001b[39m \u001b[36mtrue\u001b[39m }\u001b[33m,\u001b[39m\n     \u001b[90m 732 |\u001b[39m       })\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 733 |\u001b[39m       expect(mockPrisma\u001b[33m.\u001b[39mproduct\u001b[33m.\u001b[39mupdate)\u001b[33m.\u001b[39mtoHaveBeenCalledWith({\n     \u001b[90m     |\u001b[39m                                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 734 |\u001b[39m         where\u001b[33m:\u001b[39m { id\u001b[33m:\u001b[39m productId }\u001b[33m,\u001b[39m\n     \u001b[90m 735 |\u001b[39m         data\u001b[33m:\u001b[39m {\n     \u001b[90m 736 |\u001b[39m           status\u001b[33m:\u001b[39m newStatus\u001b[33m,\u001b[39m\u001b[0m\n\n      at Object.toHaveBeenCalledWith (features/manage-product/services/productService.test.ts:733:41)\n"
    }
  ]
}